{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4cf20566519c2ef60886a46479d73e95d6bf166260e4b0285d4c518c5e685874",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "979749",
    "logsBloom": "0x
    "blockHash": "0xbe7ea8c9fe676f236faa9860ea67e2240038bb9e3af9f449278770598357d995",
    "transactionHash": "0x4cf20566519c2ef60886a46479d73e95d6bf166260e4b0285d4c518c5e685874",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "979749",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ce2229c1a66c4b9b6f9595bb698cb3f7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChefMike\",\"details\":\"This implements price feeds as a library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"Fund the contract\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This functions funds the contract\"}},\"notice\":\"This contract is to demo a funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n *   @author ChefMike\\n *   @notice This contract is to demo a funding contract\\n *   @dev This implements price feeds as a library\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != getOwner()) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n     * @notice This functions funds the contract\\n     * @dev Fund the contract\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        );\\n        return s_priceFeed.version();\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        require(index < s_funders.length, \\\"Index out of bounds\\\");\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xba4723e3407235839d64618c3f50b2bbd0d7562104f67cff80218fd8d756784f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb6270c86e57bfed077355468d6a934f19843e652c7ce8ecec9cde9e72c6fbac9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011c9380380620011c9833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110586200017160003960006104fa01526110586000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461011d5780639e87a5cd14610148578063b60d428814610173578063d7b4750c1461017d5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906108f7565b6101ba565b6040516100b4919061093d565b60405180910390f35b3480156100c957600080fd5b506100d2610202565b6040516100df919061093d565b60405180910390f35b6100f06102c2565b005b3480156100fe57600080fd5b506101076104e9565b604051610114919061093d565b60405180910390f35b34801561012957600080fd5b506101326104f6565b60405161013f9190610967565b60405180910390f35b34801561015457600080fd5b5061015d61051e565b60405161016a91906109e1565b60405180910390f35b61017b610548565b005b34801561018957600080fd5b506101a4600480360381019061019f9190610a28565b610682565b6040516101b19190610967565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561028457600080fd5b505afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc9190610a6a565b91505090565b6102ca6104f6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103d95760006001828154811061035457610353610a97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103d190610af5565b915050610331565b50600067ffffffffffffffff8111156103f5576103f4610b3e565b5b6040519080825280602002602001820160405280156104235781602001602082028036833780820191505090505b50600190805190602001906104399291906107ed565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046090610b9e565b60006040518083038185875af1925050503d806000811461049d576040519150601f19603f3d011682016040523d82523d6000602084013e6104a2565b606091505b50509050806104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90610c10565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610587600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461071190919063ffffffff16565b10156105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf90610c7c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106169190610c9c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060018054905082106106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c290610d3e565b60405180910390fd5b600182815481106106df576106de610a97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061071d8361074d565b90506000670de0b6b3a764000085836107369190610d5e565b6107409190610de7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561079657600080fd5b505afa1580156107aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ce9190610e90565b5050509150506402540be400816107e59190610f0b565b915050919050565b828054828255906000526020600020908101928215610866579160200282015b828111156108655782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061080d565b5b5090506108739190610877565b5090565b5b80821115610890576000816000905550600101610878565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c482610899565b9050919050565b6108d4816108b9565b81146108df57600080fd5b50565b6000813590506108f1816108cb565b92915050565b60006020828403121561090d5761090c610894565b5b600061091b848285016108e2565b91505092915050565b6000819050919050565b61093781610924565b82525050565b6000602082019050610952600083018461092e565b92915050565b610961816108b9565b82525050565b600060208201905061097c6000830184610958565b92915050565b6000819050919050565b60006109a76109a261099d84610899565b610982565b610899565b9050919050565b60006109b98261098c565b9050919050565b60006109cb826109ae565b9050919050565b6109db816109c0565b82525050565b60006020820190506109f660008301846109d2565b92915050565b610a0581610924565b8114610a1057600080fd5b50565b600081359050610a22816109fc565b92915050565b600060208284031215610a3e57610a3d610894565b5b6000610a4c84828501610a13565b91505092915050565b600081519050610a64816109fc565b92915050565b600060208284031215610a8057610a7f610894565b5b6000610a8e84828501610a55565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0082610924565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b3357610b32610ac6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b88600083610b6d565b9150610b9382610b78565b600082019050919050565b6000610ba982610b7b565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bfa600b83610bb3565b9150610c0582610bc4565b602082019050919050565b60006020820190508181036000830152610c2981610bed565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c66601b83610bb3565b9150610c7182610c30565b602082019050919050565b60006020820190508181036000830152610c9581610c59565b9050919050565b6000610ca782610924565b9150610cb283610924565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ce757610ce6610ac6565b5b828201905092915050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000610d28601383610bb3565b9150610d3382610cf2565b602082019050919050565b60006020820190508181036000830152610d5781610d1b565b9050919050565b6000610d6982610924565b9150610d7483610924565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dad57610dac610ac6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df282610924565b9150610dfd83610924565b925082610e0d57610e0c610db8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e3781610e18565b8114610e4257600080fd5b50565b600081519050610e5481610e2e565b92915050565b6000819050919050565b610e6d81610e5a565b8114610e7857600080fd5b50565b600081519050610e8a81610e64565b92915050565b600080600080600060a08688031215610eac57610eab610894565b5b6000610eba88828901610e45565b9550506020610ecb88828901610e7b565b9450506040610edc88828901610a55565b9350506060610eed88828901610a55565b9250506080610efe88828901610e45565b9150509295509295909350565b6000610f1682610e5a565b9150610f2183610e5a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6057610f5f610ac6565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f9d57610f9c610ac6565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fda57610fd9610ac6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101757611016610ac6565b5b82820290509291505056fea2646970667358221220c064e13682a40ddc4634ef2637bc33cf6daf263837c3f6a50bead0d2f5cf63e964736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461011d5780639e87a5cd14610148578063b60d428814610173578063d7b4750c1461017d5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906108f7565b6101ba565b6040516100b4919061093d565b60405180910390f35b3480156100c957600080fd5b506100d2610202565b6040516100df919061093d565b60405180910390f35b6100f06102c2565b005b3480156100fe57600080fd5b506101076104e9565b604051610114919061093d565b60405180910390f35b34801561012957600080fd5b506101326104f6565b60405161013f9190610967565b60405180910390f35b34801561015457600080fd5b5061015d61051e565b60405161016a91906109e1565b60405180910390f35b61017b610548565b005b34801561018957600080fd5b506101a4600480360381019061019f9190610a28565b610682565b6040516101b19190610967565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561028457600080fd5b505afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc9190610a6a565b91505090565b6102ca6104f6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103d95760006001828154811061035457610353610a97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103d190610af5565b915050610331565b50600067ffffffffffffffff8111156103f5576103f4610b3e565b5b6040519080825280602002602001820160405280156104235781602001602082028036833780820191505090505b50600190805190602001906104399291906107ed565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046090610b9e565b60006040518083038185875af1925050503d806000811461049d576040519150601f19603f3d011682016040523d82523d6000602084013e6104a2565b606091505b50509050806104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90610c10565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610587600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461071190919063ffffffff16565b10156105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf90610c7c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106169190610c9c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060018054905082106106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c290610d3e565b60405180910390fd5b600182815481106106df576106de610a97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061071d8361074d565b90506000670de0b6b3a764000085836107369190610d5e565b6107409190610de7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561079657600080fd5b505afa1580156107aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ce9190610e90565b5050509150506402540be400816107e59190610f0b565b915050919050565b828054828255906000526020600020908101928215610866579160200282015b828111156108655782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061080d565b5b5090506108739190610877565b5090565b5b80821115610890576000816000905550600101610878565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c482610899565b9050919050565b6108d4816108b9565b81146108df57600080fd5b50565b6000813590506108f1816108cb565b92915050565b60006020828403121561090d5761090c610894565b5b600061091b848285016108e2565b91505092915050565b6000819050919050565b61093781610924565b82525050565b6000602082019050610952600083018461092e565b92915050565b610961816108b9565b82525050565b600060208201905061097c6000830184610958565b92915050565b6000819050919050565b60006109a76109a261099d84610899565b610982565b610899565b9050919050565b60006109b98261098c565b9050919050565b60006109cb826109ae565b9050919050565b6109db816109c0565b82525050565b60006020820190506109f660008301846109d2565b92915050565b610a0581610924565b8114610a1057600080fd5b50565b600081359050610a22816109fc565b92915050565b600060208284031215610a3e57610a3d610894565b5b6000610a4c84828501610a13565b91505092915050565b600081519050610a64816109fc565b92915050565b600060208284031215610a8057610a7f610894565b5b6000610a8e84828501610a55565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0082610924565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b3357610b32610ac6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b88600083610b6d565b9150610b9382610b78565b600082019050919050565b6000610ba982610b7b565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bfa600b83610bb3565b9150610c0582610bc4565b602082019050919050565b60006020820190508181036000830152610c2981610bed565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c66601b83610bb3565b9150610c7182610c30565b602082019050919050565b60006020820190508181036000830152610c9581610c59565b9050919050565b6000610ca782610924565b9150610cb283610924565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ce757610ce6610ac6565b5b828201905092915050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000610d28601383610bb3565b9150610d3382610cf2565b602082019050919050565b60006020820190508181036000830152610d5781610d1b565b9050919050565b6000610d6982610924565b9150610d7483610924565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dad57610dac610ac6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df282610924565b9150610dfd83610924565b925082610e0d57610e0c610db8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e3781610e18565b8114610e4257600080fd5b50565b600081519050610e5481610e2e565b92915050565b6000819050919050565b610e6d81610e5a565b8114610e7857600080fd5b50565b600081519050610e8a81610e64565b92915050565b600080600080600060a08688031215610eac57610eab610894565b5b6000610eba88828901610e45565b9550506020610ecb88828901610e7b565b9450506040610edc88828901610a55565b9350506060610eed88828901610a55565b9250506080610efe88828901610e45565b9150509295509295909350565b6000610f1682610e5a565b9150610f2183610e5a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6057610f5f610ac6565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f9d57610f9c610ac6565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fda57610fd9610ac6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101757611016610ac6565b5b82820290509291505056fea2646970667358221220c064e13682a40ddc4634ef2637bc33cf6daf263837c3f6a50bead0d2f5cf63e964736f6c63430008080033",
  "devdoc": {
    "author": "ChefMike",
    "details": "This implements price feeds as a library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "Fund the contract"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This functions funds the contract"
      }
    },
    "notice": "This contract is to demo a funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}