{
    "address": "0x197c2f87B544B4F31C50F64a9F47Db7a8339c407",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getVersion",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "transactionHash": "0x1612c1f35007d294f17eb41c49176014dc383c43959d51109ee4dcb798332378",
    "receipt": {
        "to": null,
        "from": "0xb8558fba797321E4fF69a772664Da86B8C9fB0A3",
        "contractAddress": "0x197c2f87B544B4F31C50F64a9F47Db7a8339c407",
        "transactionIndex": 16,
        "gasUsed": "1008394",
        "logsBloom": "0x
        "blockHash": "0x3633044d241083a1007c53f077103932d0a5e79740cfae3dc5d6c02bb51ef88e",
        "transactionHash": "0x1612c1f35007d294f17eb41c49176014dc383c43959d51109ee4dcb798332378",
        "logs": [],
        "blockNumber": 11012034,
        "cumulativeGasUsed": "8428399",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
    "numDeployments": 2,
    "solcInputHash": "26c96c677db9dc954653a1e125d0c419",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChefMike\",\"details\":\"This implements price feeds as a library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"Fund the contract\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This functions funds the contract\"}},\"notice\":\"This contract is to demo a funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n\\n/** @title A contract for crowd funding\\n*   @author ChefMike\\n*   @notice This contract is to demo a funding contract\\n*   @dev This implements price feeds as a library\\n*/\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n    * @notice This functions funds the contract\\n    * @dev Fund the contract\\n    */\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getVersion() public view returns (uint256){\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n        return s_priceFeed.version();\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        require(index < s_funders.length, \\\"Index out of bounds\\\");\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\",\"keccak256\":\"0x25ad3ec8b75bc6c3f849997806f12b9a2c2d27c9e3d2c4c6d0b336f389ba547e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa2d37ffa1f33a9890d5c54115886afe00949a49aefdd35d81e6ea5f9c6aec0e9\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60806040523480156200001157600080fd5b50604051620011e1380380620011e183398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611075806200016c6000396000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461011d5780639e87a5cd14610148578063b60d428814610173578063d7b4750c1461017d5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610914565b6101ba565b6040516100b4919061095a565b60405180910390f35b3480156100c957600080fd5b506100d2610202565b6040516100df919061095a565b60405180910390f35b6100f06102c2565b005b3480156100fe57600080fd5b50610107610504565b604051610114919061095a565b60405180910390f35b34801561012957600080fd5b50610132610511565b60405161013f9190610984565b60405180910390f35b34801561015457600080fd5b5061015d61053b565b60405161016a91906109fe565b60405180910390f35b61017b610565565b005b34801561018957600080fd5b506101a4600480360381019061019f9190610a45565b61069f565b6040516101b19190610984565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561028457600080fd5b505afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc9190610a87565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610349576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103f45760006001828154811061036f5761036e610ab4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ec90610b12565b91505061034c565b50600067ffffffffffffffff8111156104105761040f610b5b565b5b60405190808252806020026020018201604052801561043e5781602001602082028036833780820191505090505b506001908051906020019061045492919061080a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047b90610bbb565b60006040518083038185875af1925050503d80600081146104b8576040519150601f19603f3d011682016040523d82523d6000602084013e6104bd565b606091505b5050905080610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890610c2d565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105a4600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461072e90919063ffffffff16565b10156105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc90610c99565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106339190610cb9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060018054905082106106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90610d5b565b60405180910390fd5b600182815481106106fc576106fb610ab4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061073a8361076a565b90506000670de0b6b3a764000085836107539190610d7b565b61075d9190610e04565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107b357600080fd5b505afa1580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb9190610ead565b5050509150506402540be400816108029190610f28565b915050919050565b828054828255906000526020600020908101928215610883579160200282015b828111156108825782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061082a565b5b5090506108909190610894565b5090565b5b808211156108ad576000816000905550600101610895565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e1826108b6565b9050919050565b6108f1816108d6565b81146108fc57600080fd5b50565b60008135905061090e816108e8565b92915050565b60006020828403121561092a576109296108b1565b5b6000610938848285016108ff565b91505092915050565b6000819050919050565b61095481610941565b82525050565b600060208201905061096f600083018461094b565b92915050565b61097e816108d6565b82525050565b60006020820190506109996000830184610975565b92915050565b6000819050919050565b60006109c46109bf6109ba846108b6565b61099f565b6108b6565b9050919050565b60006109d6826109a9565b9050919050565b60006109e8826109cb565b9050919050565b6109f8816109dd565b82525050565b6000602082019050610a1360008301846109ef565b92915050565b610a2281610941565b8114610a2d57600080fd5b50565b600081359050610a3f81610a19565b92915050565b600060208284031215610a5b57610a5a6108b1565b5b6000610a6984828501610a30565b91505092915050565b600081519050610a8181610a19565b92915050565b600060208284031215610a9d57610a9c6108b1565b5b6000610aab84828501610a72565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b1d82610941565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b5057610b4f610ae3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ba5600083610b8a565b9150610bb082610b95565b600082019050919050565b6000610bc682610b98565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c17600b83610bd0565b9150610c2282610be1565b602082019050919050565b60006020820190508181036000830152610c4681610c0a565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c83601b83610bd0565b9150610c8e82610c4d565b602082019050919050565b60006020820190508181036000830152610cb281610c76565b9050919050565b6000610cc482610941565b9150610ccf83610941565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0457610d03610ae3565b5b828201905092915050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000610d45601383610bd0565b9150610d5082610d0f565b602082019050919050565b60006020820190508181036000830152610d7481610d38565b9050919050565b6000610d8682610941565b9150610d9183610941565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dca57610dc9610ae3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e0f82610941565b9150610e1a83610941565b925082610e2a57610e29610dd5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5481610e35565b8114610e5f57600080fd5b50565b600081519050610e7181610e4b565b92915050565b6000819050919050565b610e8a81610e77565b8114610e9557600080fd5b50565b600081519050610ea781610e81565b92915050565b600080600080600060a08688031215610ec957610ec86108b1565b5b6000610ed788828901610e62565b9550506020610ee888828901610e98565b9450506040610ef988828901610a72565b9350506060610f0a88828901610a72565b9250506080610f1b88828901610e62565b9150509295509295909350565b6000610f3382610e77565b9150610f3e83610e77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f7d57610f7c610ae3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fba57610fb9610ae3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ff757610ff6610ae3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561103457611033610ae3565b5b82820290509291505056fea26469706673582212207a79d26fc9c7d20d1ff35cdf92040ad46d8aa8962a21ce4517c1e2ae2c54646864736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461011d5780639e87a5cd14610148578063b60d428814610173578063d7b4750c1461017d5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610914565b6101ba565b6040516100b4919061095a565b60405180910390f35b3480156100c957600080fd5b506100d2610202565b6040516100df919061095a565b60405180910390f35b6100f06102c2565b005b3480156100fe57600080fd5b50610107610504565b604051610114919061095a565b60405180910390f35b34801561012957600080fd5b50610132610511565b60405161013f9190610984565b60405180910390f35b34801561015457600080fd5b5061015d61053b565b60405161016a91906109fe565b60405180910390f35b61017b610565565b005b34801561018957600080fd5b506101a4600480360381019061019f9190610a45565b61069f565b6040516101b19190610984565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561028457600080fd5b505afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc9190610a87565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610349576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103f45760006001828154811061036f5761036e610ab4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ec90610b12565b91505061034c565b50600067ffffffffffffffff8111156104105761040f610b5b565b5b60405190808252806020026020018201604052801561043e5781602001602082028036833780820191505090505b506001908051906020019061045492919061080a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047b90610bbb565b60006040518083038185875af1925050503d80600081146104b8576040519150601f19603f3d011682016040523d82523d6000602084013e6104bd565b606091505b5050905080610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890610c2d565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105a4600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461072e90919063ffffffff16565b10156105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc90610c99565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106339190610cb9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060018054905082106106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90610d5b565b60405180910390fd5b600182815481106106fc576106fb610ab4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061073a8361076a565b90506000670de0b6b3a764000085836107539190610d7b565b61075d9190610e04565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107b357600080fd5b505afa1580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb9190610ead565b5050509150506402540be400816108029190610f28565b915050919050565b828054828255906000526020600020908101928215610883579160200282015b828111156108825782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061082a565b5b5090506108909190610894565b5090565b5b808211156108ad576000816000905550600101610895565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e1826108b6565b9050919050565b6108f1816108d6565b81146108fc57600080fd5b50565b60008135905061090e816108e8565b92915050565b60006020828403121561092a576109296108b1565b5b6000610938848285016108ff565b91505092915050565b6000819050919050565b61095481610941565b82525050565b600060208201905061096f600083018461094b565b92915050565b61097e816108d6565b82525050565b60006020820190506109996000830184610975565b92915050565b6000819050919050565b60006109c46109bf6109ba846108b6565b61099f565b6108b6565b9050919050565b60006109d6826109a9565b9050919050565b60006109e8826109cb565b9050919050565b6109f8816109dd565b82525050565b6000602082019050610a1360008301846109ef565b92915050565b610a2281610941565b8114610a2d57600080fd5b50565b600081359050610a3f81610a19565b92915050565b600060208284031215610a5b57610a5a6108b1565b5b6000610a6984828501610a30565b91505092915050565b600081519050610a8181610a19565b92915050565b600060208284031215610a9d57610a9c6108b1565b5b6000610aab84828501610a72565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b1d82610941565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b5057610b4f610ae3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ba5600083610b8a565b9150610bb082610b95565b600082019050919050565b6000610bc682610b98565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c17600b83610bd0565b9150610c2282610be1565b602082019050919050565b60006020820190508181036000830152610c4681610c0a565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c83601b83610bd0565b9150610c8e82610c4d565b602082019050919050565b60006020820190508181036000830152610cb281610c76565b9050919050565b6000610cc482610941565b9150610ccf83610941565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0457610d03610ae3565b5b828201905092915050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000610d45601383610bd0565b9150610d5082610d0f565b602082019050919050565b60006020820190508181036000830152610d7481610d38565b9050919050565b6000610d8682610941565b9150610d9183610941565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dca57610dc9610ae3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e0f82610941565b9150610e1a83610941565b925082610e2a57610e29610dd5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5481610e35565b8114610e5f57600080fd5b50565b600081519050610e7181610e4b565b92915050565b6000819050919050565b610e8a81610e77565b8114610e9557600080fd5b50565b600081519050610ea781610e81565b92915050565b600080600080600060a08688031215610ec957610ec86108b1565b5b6000610ed788828901610e62565b9550506020610ee888828901610e98565b9450506040610ef988828901610a72565b9350506060610f0a88828901610a72565b9250506080610f1b88828901610e62565b9150509295509295909350565b6000610f3382610e77565b9150610f3e83610e77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f7d57610f7c610ae3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fba57610fb9610ae3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ff757610ff6610ae3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561103457611033610ae3565b5b82820290509291505056fea26469706673582212207a79d26fc9c7d20d1ff35cdf92040ad46d8aa8962a21ce4517c1e2ae2c54646864736f6c63430008080033",
    "devdoc": {
        "author": "ChefMike",
        "details": "This implements price feeds as a library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "Fund the contract"
            }
        },
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This functions funds the contract"
            }
        },
        "notice": "This contract is to demo a funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 59,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 64,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "i_owner",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "3",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
